name: Docker Image Trigger
description: Build and push Docker images to GitHub Container registry easly
inputs:
  git_token:
    description: "Git token"
    required: true
  release_name:
    description: "Release name"
    required: true
  release_version:
    description: "Release version"
    required: true
  docker_image_vendor:
    description: "Docker image vendor"
    required: true
  docker_context_path:
    description: "Docker context path"
    required: true
  release_sha:
    description: "Release SHA"
    required: false
    default: $(git rev-parse --short HEAD)
  release_description:
    description: "Release description"
    required: false
    default: '[$(git rev-parse --short HEAD)] New Docker Image Release $(jq -r ".version" package.json ) '

outputs:
  tags:
    description: "Docker image tags"
    value: ${{ steps.meta.outputs.tags }}
  labels:
    description: "Docker image labels"
    value: ${{ steps.meta.outputs.labels }}
  release_sha:
    description: "Release SHA"
    value: ${{ steps.extract_sha.outputs.sha }}

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1
    - name: login to ghcr
      uses: docker/login-action@v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.git_token }}
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        flavor: |
          latest=auto
        images: |
          ghcr.io/${{github.repository}}/${{inputs.release_name}}
        tags: |
          type=raw,value=${{ inputs.release_version }}
          type=raw,value=latest
          type=raw,value=${{ steps.extract_sha.outputs.sha }}
          type=raw,value=${{ inputs.release_sha }}-mod
          type=raw,value=$(git rev-parse --short HEAD)-latest
        labels: |
          maintainer=${{ inputs.docker_image_vendor }}
          org.opencontainers.image.vendor=${{ inputs.docker_image_vendor }}
          org.opencontainers.image.title=${{ inputs.release_name }}
          org.opencontainers.image.version=${{ inputs.release_version }}
          org.opencontainers.image.description=${{ inputs.release_description }}
          org.opencontainers.image.revision=${{ inputs.release_sha }}
          org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1

    - name: Check current folder directory
      shell: bash
      id: extract_sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6.7.0
      with:
        context: ${{ inputs.docker_context_path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      shell: bash
      run: echo ${{ steps.build-and-push.outputs.digest }}
